name: Build and Deploy React

on:
  push:
    branches:
        - main


env:
  applicationfolder: Client
  AWS_REGION: eu-west-2
  S3BUCKET: slimekeeper-client


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.13.1

      - name: Install dependencies
        working-directory: ${{ env.applicationfolder }}/
        run: npm install

      - name: Build the project
        working-directory: ${{ env.applicationfolder }}/
        run: npm run build
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Upload to AWS S3
        working-directory: ${{ env.applicationfolder }}/
        run: aws s3 sync dist s3://${{ env.S3BUCKET }}/


  # deploy:
    # runs-on: ubuntu-latest
    # needs: build
    # if: github.ref == 'refs/heads/master'

    # steps:
      # - name: Checkout repository
        # uses: actions/checkout@v3

      # - name: Download Build Artifact
        # uses: actions/download-artifact@v3
        # with:
          # name: build

      # - name: Deploy to S3
        # uses: jakejarvis/s3-sync-action@v0.5.1
        # with:
          # args: --delete
        # env:
          # AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS_REGION: ap-south-1

      # - name: Invalidate CloudFront Cache
        # uses: chetan/invalidate-cloudfront-action@v2
        # env:
          # DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          # PATHS: '/*'
          # AWS_REGION: ap-south-1
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}